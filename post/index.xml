<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 孤独前行</title><link>/post/</link><description>Recent content in Posts on 孤独前行</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 11 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml"/><item><title>docker.sock connect</title><link>/post/docker/docker-sock/</link><pubDate>Thu, 11 Feb 2021 00:00:00 +0000</pubDate><guid>/post/docker/docker-sock/</guid><description>目录 任务失败 解决方案 总结 任务失败 远程派发了一个任务启动一个容器，竟然失败了，平时都没有出现过问题。通过日志查看发现问题如下： ==++Got++ permission denied while trying to connect to</description></item><item><title>docker容器PID</title><link>/post/docker/container-pid/</link><pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate><guid>/post/docker/container-pid/</guid><description>查找docker容器的PID 平时操作容器都是通过容器ID直接操作，例如docker exec -it containerID。可我们也知道docker的容器</description></item><item><title>grpc的简介和使用</title><link>/post/golang/grpc/</link><pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate><guid>/post/golang/grpc/</guid><description>gRPC(google+remote process call) 详解 grpc 简介 grpc是一个高性能、开源和通用的 RPC 框架，面向移动和 HTTP/2 设计。所谓RPC(remote procedure call 远程过程调用)框架实际是提供了一套机</description></item><item><title>GormV2-Mock单元测试</title><link>/post/golang/gorm-mock/</link><pubDate>Sun, 15 Apr 2018 00:00:00 +0000</pubDate><guid>/post/golang/gorm-mock/</guid><description>gorm v2 mock测试 平时开发中会经常用到各种数据库，做单元测试时又不想真正的连接数据库。今天介绍如何在基于gorm v2做单元测试 go-sqlmock 今天得主角就是</description></item><item><title>Etcd在go中的使用</title><link>/post/golang/etcd/</link><pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate><guid>/post/golang/etcd/</guid><description>Etcd 介绍 etcd 是一个高可用的分布式键值(key-value)存储数据库。具有以下特点: 简单：安装配置简单，而且提供了 HTTP API 进行交互，使用也很简单 键值</description></item><item><title>gotests单元测试</title><link>/post/golang/gotests/</link><pubDate>Thu, 15 Feb 2018 00:00:00 +0000</pubDate><guid>/post/golang/gotests/</guid><description>Go单元测试 go 程序中一般使用官方的go test 做测试，面对一些复杂情况和紧急需求写单元测试就变得有些仓促，今天介绍一款利器gotests来写单元测</description></item><item><title>GMP调度器简介</title><link>/post/golang/gmp/</link><pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate><guid>/post/golang/gmp/</guid><description>GO 语言的调度器 目录 GMP 模型简介 调度器实现机制 GMP 模型简介 先来一张经典的GMP 关系图 G 是go程序中调度器中的一个任务，类似操作系统中的线程，主要处</description></item><item><title>Go Channel 底层实现</title><link>/post/golang/go-channel/</link><pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate><guid>/post/golang/go-channel/</guid><description>Go Channel 底层实现 目录 channel 是什么 channel 的创建 channel 的发送 channel 的接收 channel 的关闭 channel 是什么 “Do not communicate by sharing memory; instead, share memory by communicating.” 不要通过共享内存通信，</description></item><item><title>Rich Content</title><link>/post/rich-content/</link><pubDate>Thu, 10 Mar 2016 00:00:00 +0000</pubDate><guid>/post/rich-content/</guid><description>&lt;p>Hugo ships with several &lt;a href="https://gohugo.io/content-management/shortcodes/#use-hugos-built-in-shortcodes" target="_blank" rel="noopener">Built-in Shortcodes&lt;/a>
for rich content, along with a &lt;a href="https://gohugo.io/about/hugo-and-gdpr/" target="_blank" rel="noopener">Privacy Config&lt;/a>
and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p></description></item><item><title>图像占位符显示</title><link>/post/placeholder-text/</link><pubDate>Wed, 09 Mar 2016 00:00:00 +0000</pubDate><guid>/post/placeholder-text/</guid><description>&lt;p>范德格拉夫原理（Van de Graaf Canon）重构了曾经用于书籍设计中将页面划分为舒适比例的方法。这一原理也被称为“秘密原理”，用于许多中世纪的手稿和古板书中。在范德格拉夫原理中，文本区域和页面的长款具有相同的比例，并且文本区域的高度等于页面宽度，通过划分页面得到九分之一的订口边距和九分之二的切口边距，以及与页面长宽相同的比例的文本区域。&lt;/p></description></item><item><title>数据公式设置显示</title><link>/post/math-typesetting/</link><pubDate>Tue, 08 Mar 2016 00:00:00 +0000</pubDate><guid>/post/math-typesetting/</guid><description>&lt;p>Hugo 项目中的数学表示法可以通过使用第三方 JavaScript 库来实现。&lt;/p></description></item><item><title>支持Emoji表情符号</title><link>/post/emoji-support/</link><pubDate>Sat, 05 Mar 2016 00:00:00 +0000</pubDate><guid>/post/emoji-support/</guid><description>&lt;p>&lt;code>Emoji&lt;/code> 表情符号可以通过多种方式在 &lt;code>Hugo&lt;/code> 项目中启用。&lt;/p></description></item></channel></rss>